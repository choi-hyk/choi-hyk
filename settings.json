// ------------------------------------------------------------------
// 🛠️ 작업 환경마다 커스텀이 필요한 설정은 ctrl+F로 "custom_set" 검색
// ------------------------------------------------------------------
{
    // ================================================================
    // 🎨 1 UI & 테마 관련
    // - 전반적인 색상 테마와 아이콘 테마
    // - 특정 테마 사용 시 보조 색상 커스터마이즈
    // ================================================================
    "workbench.colorTheme": "Palenight (Mild Contrast)", // 전체 색상 테마
    "workbench.iconTheme": "material-icon-theme", // 아이콘 테마
    "workbench.colorCustomizations": {
        "terminal.background": "#44224a", // 터미널 배경색 가독성
        "terminal.foreground": "#000000", // 터미널 글자색
        "terminalCursor.foreground": "#dd8b20", // 터미널 커서색
        // 특정 테마 변형 색상 팔레트 테마를 바꾸면 이 블록은 무시됨
        "[Material Theme Palenight High Contrast]": {
            "activityBarBadge.background": "#AB47BC",
            "activityBar.activeBorder": "#AB47BC",
            "list.activeSelectionForeground": "#AB47BC",
            "list.inactiveSelectionForeground": "#AB47BC",
            "list.highlightForeground": "#AB47BC",
            "scrollbarSlider.activeBackground": "#AB47BC50",
            "editorSuggestWidget.highlightForeground": "#AB47BC",
            "textLink.foreground": "#AB47BC",
            "progressBar.background": "#AB47BC",
            "pickerGroup.foreground": "#AB47BC",
            "tab.activeBorder": "#AB47BC",
            "notificationLink.foreground": "#AB47BC",
            "editorWidget.resizeBorder": "#AB47BC",
            "editorWidget.border": "#AB47BC",
            "settings.modifiedItemIndicator": "#AB47BC",
            "settings.headerForeground": "#AB47BC",
            "panelTitle.activeBorder": "#AB47BC",
            "breadcrumb.activeSelectionForeground": "#AB47BC",
            "menu.selectionForeground": "#AB47BC",
            "menubar.selectionForeground": "#AB47BC",
            "editor.findMatchBorder": "#AB47BC",
            "selection.background": "#AB47BC40",
            "statusBarItem.remoteBackground": "#AB47BC"
        }
    },
    "window.zoomLevel": 1.5, // UI 스케일 조정 고해상도 모니터에서 가독성 향상  (custom_set)

    // ================================================================
    // ⌨️ 2 에디터 타이포그래피 & 접근성
    // - 폰트와 합자 사용 유무
    // - 미니맵과 접근성 보조
    // ================================================================
    "editor.fontFamily": "'Fira code'", // 기본 에디터 폰트 개발용 합자 지원 폰트  (custom_set)
    "editor.fontLigatures": true, // 합자 사용 ex => → === ⇒ 등
    "editor.minimap.renderCharacters": false, // 미니맵에 실제 글자 대신 블록 렌더링 성능 유리
    "editor.minimap.showSlider": "always", // 미니맵 스크롤바 항상 표시
    "editor.accessibilitySupport": "on", // 스크린리더 등 보조 기능 최적화

    // ================================================================
    // 🧹 3 코드 포맷팅 공통 정책
    // - 저장 시 포맷 & 코드 액션
    // - 전역 기본 포매터는 Prettier 단 언어별 오버라이드 가능
    // ================================================================
    "editor.formatOnSave": true, // 저장 시 자동 포맷
    "editor.codeActionsOnSave": {
        "source.fixAll": "explicit" // 명시적으로 저장 시에만 auto-fix 수행 백그라운드 오작동 방지
    },
    "editor.defaultFormatter": "esbenp.prettier-vscode", // 전역 기본 포매터는 Prettier로
    "prettier.tabWidth": 4, // Prettier 들여쓰기 폭  (custom_set)

    // ================================================================
    // 🐍 4 Python 전용 설정
    // - Prettier는 Python 미지원이므로 Black 사용
    // - 동작 조건 Microsoft Python 확장 + Black Formatter 확장 설치
    // ================================================================
    "[python]": {
        "editor.formatOnSave": true, // Python 저장 시 포맷
        "editor.defaultFormatter": "ms-python.black-formatter" // Python 포매터는 Black로 지정
    },
    "python.createEnvironment.trigger": "off", // 가상환경 자동 생성 유도 팝업 비활성화 CI나 수동 관리 선호 시 권장

    // ================================================================
    // 🐹 5 Dart & Flutter
    // - UI 가이드 표시와 DevTools 연결
    // - 줄바꿈 정책과 눈금자
    // ================================================================
    "[dart]": {
        "editor.formatOnSave": true,
        "editor.formatOnType": false, // 타이핑 중 자동 포맷 비활성 저장 시에만 포맷
        "editor.wordWrap": "wordWrapColumn", // 지정 열에서 줄바꿈
        "editor.wordWrapColumn": 150, // 줄바꿈 기준 열
        "editor.rulers": [150] // 가이드 라인 시각화
    },
    "dart.previewFlutterUiGuides": true, // 위젯 경계선 가이드 프리뷰
    "dart.openDevTools": "flutter", // F5 시 Flutter DevTools 우선
    "dart.debugExternalPackageLibraries": true, // 외부 패키지 라이브러리 디버깅 허용
    "dart.debugSdkLibraries": false, // SDK 내부 디버깅 비활성 성능상 이점
    "dart.flutterSdkPath": "C:\\dev\\flutter", // Flutter SDK 로컬 경로  (custom_set)

    // ================================================================
    // 🌐 6 JSP C++ 등 기타 언어
    // ================================================================
    "[jsp]": {
        "editor.formatOnSave": false // JSP 저장 포맷 비활성 포맷터 충돌 회피
    },
    "[cpp]": {
        "editor.wordBasedSuggestions": "off", // 단어 기반 제안 비활성 심볼 기반 제안 선호
        "editor.suggest.insertMode": "replace", // 제안 확정 시 텍스트 교체 모드
        "editor.semanticHighlighting.enabled": true // 시맨틱 하이라이트 활성 타입 기반 가독성 향상
    },

    // ================================================================
    // 🖥️ 7 터미널 환경
    // - Windows 기본 프로필 PowerShell
    // - Nerd Font로 아이콘 대응
    // ================================================================
    "terminal.integrated.defaultProfile.windows": "PowerShell", // 기본 셸  Windows (custom_set)
    "terminal.integrated.cursorStyle": "underline", // 커서 스타일
    "terminal.integrated.cursorStyleInactive": "underline", // 비활성 탭 커서 스타일
    "terminal.integrated.fontFamily": "'Agave Nerd Font'", // 터미널 폰트 Nerd Font 사용 (custom_set)
    "terminal.integrated.fontSize": 16, // 터미널 폰트 크기 (custom_set)

    // ================================================================
    // 📁 8 파일 & 익스플로러
    // - 삭제 및 드래그 확인창 비활성으로 작업 속도 향상
    // - 파일 연관 및 부모 디렉터리 Repo 자동 탐색 제어
    // ================================================================
    "files.associations": {
        "*.json": "json" // JSON 확장자 명시
    },
    "explorer.confirmDelete": false, // 삭제 확인 비활성 안전장치가 필요하면 true
    "explorer.confirmDragAndDrop": false, // 드래그 이동 확인 비활성
    "git.openRepositoryInParentFolders": "never", // 상위 폴더 Repo 자동 오픈 방지 모놀리포 오동작 방지

    // ================================================================
    // 🧭 9 워크벤치 동작 & 시작 화면
    // - 시작 편집기 종류
    // - 일부 상단 UI 컨트롤 비활성로 깔끔한 헤더
    // ================================================================
    "workbench.startupEditor": "none", // 시작 시 빈 창 or 최근 항목 대신 아무것도 표시 안 함
    "workbench.navigationControl.enabled": false, // 탐색 컨트롤 비표시
    "workbench.layoutControl.enabled": false, // 레이아웃 컨트롤 비표시
    "chat.commandCenter.enabled": false, // 코맨드 센터 비표시 상단 단순화

    // ================================================================
    // 🔁 10 Git & GitLens
    // - 빠른 커밋 흐름과 동기화 확인 끄기
    // - 기여자 뷰에 모든 브랜치
    // ================================================================
    "git.confirmSync": false, // sync 전 확인 팝업 비활성
    "git.enableSmartCommit": true, // 스테이징 없이 커밋 허용 편의성↑
    "gitlens.views.contributors.showAllBranches": true, // 모든 브랜치 기준 기여자 표시

    // ================================================================
    // 🧩 11 확장 설정 등 기타
    // - 아이콘 테마 폴더 색상 커스텀
    // - 레인보우 브래킷 알림 숨김
    // - TypeScript import 자동 업데이트
    // - Copilot 차기 제안
    // ================================================================
    "material-icon-theme.folders.theme": "classic", // 아이콘 테마 폴더 스타일
    "material-icon-theme.rootFolders.color": "#7cb341", // 루트 폴더 색상
    "material-icon-theme.folders.color": "#ff7085", // 일반 폴더 색상
    "RainbowBrackets.depreciation-notice": false, // 사용 중단 공지 숨김
    "typescript.updateImportsOnFileMove.enabled": "always", // 파일 이동 시 import 경로 자동 업데이트
    "github.copilot.nextEditSuggestions.enabled": true, // Copilot 차 회차 제안 활성

    // ================================================================
    // 🔍 12 Diff & Merge
    // - 변경 없는 영역 접기로 비교 집중력 향상
    // - 공백 트림 무시 해제 라인 끝 공백 변경도 감지
    // ================================================================
    "diffEditor.hideUnchangedRegions.enabled": true, // 변경 없는 영역 접기
    "diffEditor.ignoreTrimWhitespace": false, // 라인 끝 공백 변경도 차이로 간주

    // ================================================================
    // 🪲 13 디버깅
    // - Task 오류가 있어도 디버그 계속 진행
    // - 자바 디버깅 사전 빌드 강제 해제
    // - 디버그 콘솔 폰트 통일
    // ================================================================
    "debug.onTaskErrors": "debugAnyway", // 프리디버그 task 실패 시에도 진행
    "java.debug.settings.forceBuildBeforeLaunch": false, // 런치 전 빌드 강제 해제 빌드 느릴 때 유용
    "debug.console.fontFamily": "'Agave Nerd Font'" // 디버그 콘솔 폰트 (custom_set)
}
